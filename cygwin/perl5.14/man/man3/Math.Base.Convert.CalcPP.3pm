.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Math::Base::Convert::CalcPP 3"
.TH Math::Base::Convert::CalcPP 3 "2012-12-23" "perl v5.14.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Math::Base::Convert::CalcPP
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module contains the standard methods used by \fBMath::Base::Convert\fR to
convert from one base number to another base number.
.IP "\(bu" 4
\&\f(CW$carry\fR = addbaseno($reg32ptr,$int)
.Sp
This function adds an integer < 65536 to a long n*32 bit register and
returns the carry.
.IP "\(bu" 4
multiply($reg32ptr,$int)
.Sp
This function multiplies a long n*32 bit register by an integer < 65536
.IP "\(bu" 4
($qptr,$remainder) = dividebybase($reg32ptr,$int)
.Sp
this function divides a long n*32 bit register by an integer < 65536 and
returns a pointer to a long n*32 bit quotient and an integer remainder.
.IP "\(bu" 4
\&\f(CW$bc\fR\->useFROMbaseto32wide
.Sp
This method converts \s-1FROM\s0 an input base string to a long n*32 bit register using
an algorithim like:
.Sp
.Vb 6
\&        $longnum = 0;
\&        for $char ( $in_str =~ /./g ) {
\&          $longnum *= $base;
\&          $longnum += $value{$char)
\&        }
\&        return $number;
.Ve
.IP "\(bu" 4
\&\f(CW$output\fR = \f(CW$bc\fR\->use32wideTObase
.Sp
This method converts a long n*32 bit register \s-1TO\s0 a base number using an
algorithim like:
.Sp
.Vb 6
\&    $output = \*(Aq\*(Aq;
\&    while( $longnum > 0 ) {
\&      $output = ( $longnum % $base ) . $output;
\&      $num = int( $longnum / $base );
\&    }
\&    return $output;
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Michael Robinton, michael@bizsystems.com
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2012, Michael Robinton
.PP
This program is free software; you may redistribute it and/or modify it
under the same terms as Perl itself.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 212:" 4
.IX Item "Around line 212:"
You forgot a '=back' before '=head1'
