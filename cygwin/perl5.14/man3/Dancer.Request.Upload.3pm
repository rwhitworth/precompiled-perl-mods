.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Dancer::Request::Upload 3"
.TH Dancer::Request::Upload 3 "2015-07-03" "perl v5.14.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dancer::Request::Upload \- class representing file uploads requests
.SH "VERSION"
.IX Header "VERSION"
version 1.3140
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    # somewhere in your view:
\&    <form action="/upload" method="POST" enctype="multipart/form\-data">
\&      <input type="file" name="filename">
\&      <input type="submit">
\&    </form>
\&   
\&    # and then in your application handler:
\&    post \*(Aq/upload\*(Aq => sub {
\&      my $file = request\->upload(\*(Aqfilename\*(Aq);
\&      $file\->copy_to($upload_dir);  # or whatever you need
\&    };
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class implements a representation of file uploads for Dancer.
These objects are accessible within route handlers via the request\->uploads 
keyword. See Dancer::Request for details.
.SH "METHODS"
.IX Header "METHODS"
.IP "filename" 4
.IX Item "filename"
Returns the filename as sent by the client.
.IP "basename" 4
.IX Item "basename"
Returns basename for \*(L"filename\*(R".
.IP "tempname" 4
.IX Item "tempname"
Returns the name of the temporary file the data has been saved to.
.Sp
This will be in e.g. /tmp, and given a random name, with no file extension.
.IP "link_to" 4
.IX Item "link_to"
Creates a hard link to the temporary file. Returns true for success,
false for failure.
.Sp
.Vb 1
\&    $upload\->link_to(\*(Aq/path/to/target\*(Aq);
.Ve
.IP "file_handle" 4
.IX Item "file_handle"
Returns a read-only file handle on the temporary file.
.IP "content" 4
.IX Item "content"
Returns a scalar containing the contents of the temporary file.
.IP "copy_to" 4
.IX Item "copy_to"
Copies the temporary file using File::Copy. Returns true for success,
false for failure.
.Sp
.Vb 1
\&    $upload\->copy_to(\*(Aq/path/to/target\*(Aq)
.Ve
.IP "size" 4
.IX Item "size"
The size of the upload, in bytes.
.IP "headers" 4
.IX Item "headers"
Returns a hash ref of the headers associated with this upload.
.IP "type" 4
.IX Item "type"
The Content-Type of this upload.
.SH "AUTHORS"
.IX Header "AUTHORS"
This module as been written by Alexis Sukrieh, heavily based on
Plack::Request::Upload. Kudos to Plack authors.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Dancer
.SH "AUTHOR"
.IX Header "AUTHOR"
Dancer Core Developers
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by Alexis Sukrieh.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
